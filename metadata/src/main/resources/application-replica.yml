# Production configuration with database replication

server:
  port: 8083

spring:
  application:
    name: metadata-service
  
  # Write operations - HAProxy routes to Master
  datasource:
    url: jdbc:postgresql://localhost:5435/video_platform
    username: ${DB_USERNAME:upload_user}
    password: ${DB_PASSWORD:upload_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000

  # Read-only operations - HAProxy routes to Master + Slave
  datasource-readonly:
    url: jdbc:postgresql://localhost:5436/video_platform
    username: ${DB_USERNAME:upload_user}
    password: ${DB_PASSWORD:upload_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 15
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false  # Disable in production
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false  # Disable in production
  
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    enabled: true
    contexts: metadata-service  # IMPORTANT: Context separation for shared DB
  
  # Redis configuration for production
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
  
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}

# AWS Configuration
aws:
  s3:
    bucket:
      name: ${S3_BUCKET_NAME:video-hosting-bucket}
  region: ${AWS_REGION:us-east-1}
  cloudfront:
    domain: ${CLOUDFRONT_DOMAIN:}
    enabled: ${CLOUDFRONT_ENABLED:true}

# RabbitMQ Configuration
rabbitmq:
  exchange:
    video: ${RABBITMQ_EXCHANGE:video.exchange}
  queue:
    metadata: ${RABBITMQ_QUEUE_METADATA:video.metadata.queue}
    search: ${RABBITMQ_QUEUE_SEARCH:video.search.queue}
  routing:
    key:
      metadata: ${RABBITMQ_ROUTING_KEY_METADATA:video.metadata}
      search-refresh: ${RABBITMQ_ROUTING_KEY_SEARCH:video.search.refresh}

# Cache configuration
cache:
  video-metadata:
    ttl: 3600  # 1 hour
  search-results:
    ttl: 600   # 10 minutes
  categories:
    ttl: 7200  # 2 hours

# Search configuration
search:
  default-page-size: 20
  max-page-size: 100
  default-sort: relevance
  materialized-view-refresh-interval: 300  # 5 minutes

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: never  # Hide details in production

# Logging configuration for production
logging:
  level:
    com.tskrypko.metadata: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN  # Hide SQL in production
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/metadata-service.log
    max-size: 100MB
    max-history: 30 